name: Build zen
on:
  push:
    branches:
      - v2.x/main
      - v2.x/staging
  
  pull_request:
    types: [opened, reopened, synchronize]
  
  workflow_dispatch:
    inputs:
      BRANCH_NAME:
        description: 'Specify branch name or PR (e.g. PR-41)'
        required: false
      PERFORM_RELEASE:
        description: '[Release] perform release'
        required: false
        default: 'false'
        type: boolean

jobs:
  
  build-ubuntu:
    runs-on: ubuntu-latest
    steps: 
      - name: '[Prep 1] Setup Node'
        uses: actions/setup-node@v2
        with:
          node-version: 18
      - name: '[Prep 2] Setup jFrog CLI'
        uses: jfrog/setup-jfrog-cli@v2
        env:
          JF_ARTIFACTORY_1: ${{ secrets.JF_ARTIFACTORY_TOKEN }}
      - name: '[Prep 3] Checkout'
        uses: actions/checkout@v3
      - name: '[prep 4] Install'
        run: |
          npm install
      - name: '[prep 5] Package'
        run: |
          npm run make  
      - name: '[prep 6] Publish'
        uses: zowe-actions/zlux-builds/zen/publish@v2.x/main
        with: 
          os: ubuntu
          perform-release: ${{ github.event.inputs.PERFORM_RELEASE }}
          
          
  build-window:
    runs-on: windows-latest
    steps: 
      - name: '[Prep 1] Setup Node'
        uses: actions/setup-node@v2
        with:
          node-version: 18
      - name: '[Prep 2] Setup jFrog CLI'
        uses: jfrog/setup-jfrog-cli@v2
        env:
          JF_ARTIFACTORY_1: ${{ secrets.JF_ARTIFACTORY_TOKEN }}
      - name: '[Prep 3] Checkout'
        uses: actions/checkout@v3
      - name: '[prep 4] Install'
        run: |
          npm install      
      - name: '[prep 5] Package'
        run: |
          npm run make  
      - name: '[prep 6] Publish'
        uses: zowe-actions/zlux-builds/zen/publish@v2.x/main
        with: 
          os: windows
          perform-release: ${{ github.event.inputs.PERFORM_RELEASE }}
          
  build-macos:
    runs-on: macos-latest
    steps: 
      - name: '[Prep 1] Setup jFrog CLI'
        uses: jfrog/setup-jfrog-cli@v2
        env:
          JF_ARTIFACTORY_1: ${{ secrets.JF_ARTIFACTORY_TOKEN }}
      - name: '[Prep 2] Setup Node'
        uses: actions/setup-node@v2
        with:
          node-version: 18
      - name: '[Prep 3] Checkout'
        uses: actions/checkout@v3
      - name: '[Prep 4] Install Python 3.12 for npm appdmg'
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: '[prep 5] Install'
        run: |
          python3 -m pip install setuptools
          npm install     
      - name: '[prep 6] Package'
        run: |
          npm run make  
      - name: '[prep 7] Publish'
        uses: zowe-actions/zlux-builds/zen/publish@v2.x/main
        with: 
          os: macos
          perform-release: ${{ github.event.inputs.PERFORM_RELEASE }}
          
    
  post-build:
    runs-on: ubuntu-latest
    needs:
      - build-ubuntu
      - build-window
      - build-macos
    if: ${{ success() && github.event.inputs.PERFORM_RELEASE == 'true' }}
    steps:
      - name: '[Prep 3] Checkout'
        uses: actions/checkout@v3

      - name: '[Release 1] Release (if necessary)'
        if: ${{ success() && github.event.inputs.PERFORM_RELEASE == 'true' }}
        uses: zowe-actions/shared-actions/release@main

      - name: '[Release 2] Bump Zen Version (if necessary)' 
        if: ${{ success() && github.event.inputs.PERFORM_RELEASE == 'true' }}
        uses: zowe-actions/zlux-builds/zen/bump-version@v2.x/main
        env: 
         GITHUB_TOKEN: ${{ secrets.ZOWE_ROBOT_TOKEN }}